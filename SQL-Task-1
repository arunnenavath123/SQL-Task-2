-- Step 1: Create Tables

-- 1. Students Table (Assumed Already Created)
-- CREATE TABLE Students (
--     student_id INT PRIMARY KEY,
--     name VARCHAR(100),
--     email VARCHAR(100)
-- );

-- 2. Courses Table
CREATE TABLE Courses (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(100),
    course_description TEXT
);

-- 3. Enrolments Table
CREATE TABLE Enrolments (
    enrolment_id INT PRIMARY KEY,
    student_id INT,
    course_id INT,
    enrolment_date DATE,
    FOREIGN KEY (student_id) REFERENCES Students(student_id),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

-- Insert Sample Data
INSERT INTO Courses (course_id, course_name, course_description) VALUES
(101, 'SQL Basics', 'Introduction to SQL'),
(102, 'Advanced SQL', 'Deep dive into SQL queries'),
(103, 'Data Visualization', 'Using tools to visualize data');

INSERT INTO Enrolments (enrolment_id, student_id, course_id, enrolment_date) VALUES
(1, 1, 101, '2024-01-10'),
(2, 1, 102, '2024-01-15'),
(3, 2, 101, '2024-01-20'),
(4, 3, 103, '2024-02-01');

-- Step 2: Queries

-- Task 1: List all students and the courses they are enrolled in
SELECT s.name AS student_name, c.course_name
FROM Students s
INNER JOIN Enrolments e ON s.student_id = e.student_id
INNER JOIN Courses c ON e.course_id = c.course_id;

-- Task 2: Find the number of students enrolled in each course
SELECT c.course_id, c.course_name, COUNT(e.student_id) AS total_enrolled
FROM Courses c
LEFT JOIN Enrolments e ON c.course_id = e.course_id
GROUP BY c.course_id, c.course_name;

-- Task 3: List students who have enrolled in more than one course
SELECT s.name AS student_name, COUNT(e.course_id) AS course_count
FROM Enrolments e
JOIN Students s ON e.student_id = s.student_id
GROUP BY e.student_id, s.name
HAVING COUNT(e.course_id) > 1;

-- Task 4: Find courses with no enrolled students
SELECT c.course_id, c.course_name
FROM Courses c
LEFT JOIN Enrolments e ON c.course_id = e.course_id
WHERE e.enrolment_id IS NULL;
